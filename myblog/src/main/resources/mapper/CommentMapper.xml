<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.myblog.mapper.CommentMapper">

    <resultMap type="com.myblog.entity.Comment" id="CommentMap">
        <result property="commentId" column="comment_id" jdbcType="INTEGER"/>
        <result property="commentUserId" column="comment_user_id" jdbcType="INTEGER"/>
        <result property="commentArticleId" column="comment_article_id" jdbcType="INTEGER"/>
        <result property="commentContent" column="comment_content" jdbcType="VARCHAR"/>
        <result property="commentCreateTime" column="comment_create_time" jdbcType="TIMESTAMP"/>
        <result property="parentCommentId" column="parent_comment_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="CommentMap">
        select comment_id,
               comment_user_id,
               comment_article_id,
               comment_content,
               comment_create_time,
               parent_comment_id
        from db_myblog.comment
        where comment_id = #{commentId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="CommentMap">
        select comment_id,
               comment_user_id,
               comment_article_id,
               comment_content,
               comment_create_time,
               parent_comment_id
        from db_myblog.comment
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="CommentMap">
        select
        comment_id, comment_user_id, comment_article_id, comment_content, comment_create_time, parent_comment_id
        from db_myblog.comment
        <where>
            <if test="commentId != null">
                and comment_id = #{commentId}
            </if>
            <if test="commentUserId != null">
                and comment_user_id = #{commentUserId}
            </if>
            <if test="commentArticleId != null">
                and comment_article_id = #{commentArticleId}
            </if>
            <if test="commentContent != null and commentContent != ''">
                and comment_content = #{commentContent}
            </if>
            <if test="commentCreateTime != null">
                and comment_create_time = #{commentCreateTime}
            </if>
            <if test="parentCommentId != null">
                and parent_comment_id = #{parentCommentId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="commentId" useGeneratedKeys="true">
        insert into db_myblog.comment(comment_user_id, comment_article_id, comment_content, comment_create_time,
                                      parent_comment_id)
        values (#{commentUserId}, #{commentArticleId}, #{commentContent}, #{commentCreateTime}, #{parentCommentId})
    </insert>

    <insert id="insertBatch" keyProperty="commentId" useGeneratedKeys="true">
        insert into db_myblog.comment(comment_user_id, comment_article_id, comment_content, comment_create_time,
        parent_comment_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.commentUserId}, #{entity.commentArticleId}, #{entity.commentContent}, #{entity.commentCreateTime},
            #{entity.parentCommentId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="commentId" useGeneratedKeys="true">
        insert into db_myblog.comment(comment_user_id, comment_article_id, comment_content, comment_create_time,
        parent_comment_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.commentUserId}, #{entity.commentArticleId}, #{entity.commentContent}, #{entity.commentCreateTime},
            #{entity.parentCommentId})
        </foreach>
        on duplicate key update
        comment_user_id = values(comment_user_id) , comment_article_id = values(comment_article_id) , comment_content =
        values(comment_content) , comment_create_time = values(comment_create_time) , parent_comment_id =
        values(parent_comment_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update db_myblog.comment
        <set>
            <if test="commentUserId != null">
                comment_user_id = #{commentUserId},
            </if>
            <if test="commentArticleId != null">
                comment_article_id = #{commentArticleId},
            </if>
            <if test="commentContent != null and commentContent != ''">
                comment_content = #{commentContent},
            </if>
            <if test="commentCreateTime != null">
                comment_create_time = #{commentCreateTime},
            </if>
            <if test="parentCommentId != null">
                parent_comment_id = #{parentCommentId},
            </if>
        </set>
        where comment_id = #{commentId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from db_myblog.comment
        where comment_id = #{commentId}
    </delete>

</mapper>

